From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Fri, 20 Nov 2020 11:21:05 -0800
Subject: MSFT-PATCH: Changes to ICU headers for the Windows OS version of ICU.

This adds special marker comments to the ICU headers in order to omit
things we don't want or can't expose in the Windows public SDK headers.

diff --git a/icu/icu4c/source/common/unicode/uchar.h b/icu/icu4c/source/common/unicode/uchar.h
index 1e0f82e706c482f231e14151052584d8c1009f28..a096d097163e0d2be28be91c6c4415264f82b8a3 100644
--- a/icu/icu4c/source/common/unicode/uchar.h
+++ b/icu/icu4c/source/common/unicode/uchar.h
@@ -48,6 +48,10 @@ typedef struct USet USet;
 
 U_CDECL_BEGIN
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: The value of these macros can change at runtime, so the API u_getUnicodeVersion
+// should be used instead of any version macro.
+
 /*==========================================================================*/
 /* Unicode version number                                                   */
 /*==========================================================================*/
@@ -62,6 +66,8 @@ U_CDECL_BEGIN
  */
 #define U_UNICODE_VERSION "13.0"
 
+//IGNORE_WINDOWS_HEADERS_END
+
 /**
  * \file
  * \brief C API: Unicode Properties
diff --git a/icu/icu4c/source/common/unicode/uconfig.h b/icu/icu4c/source/common/unicode/uconfig.h
index bbc232d1ed8fdf94ed8b6f4e5ff9c3aeea7a5e88..c4239fc9997028fb050be43740bb1cb368f514ba 100644
--- a/icu/icu4c/source/common/unicode/uconfig.h
+++ b/icu/icu4c/source/common/unicode/uconfig.h
@@ -45,6 +45,10 @@
  * @stable ICU 2.4
  */
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: Since these are compile time settings, it doesn't make sense to 
+// load a user config header in the Windows OS SDK version.
+
 /**
  * If this switch is defined, ICU will attempt to load a header file named "uconfig_local.h"
  * prior to determining default settings for uconfig variables.
@@ -55,6 +59,8 @@
 #include "uconfig_local.h"
 #endif
 
+//IGNORE_WINDOWS_HEADERS_END
+
 /**
  * \def U_DEBUG
  * Determines whether to include debugging code.
@@ -369,6 +375,9 @@
 #   define UCONFIG_MSGPAT_DEFAULT_APOSTROPHE_MODE UMSGPAT_APOS_DOUBLE_OPTIONAL
 #endif
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: We always use the OS LCID mapping API for the Windows OS build of ICU.
+
 /**
  * \def UCONFIG_USE_WINDOWS_LCID_MAPPING_API
  * On platforms where U_PLATFORM_HAS_WIN32_API is true, this switch determines
@@ -381,6 +390,8 @@
 #   define UCONFIG_USE_WINDOWS_LCID_MAPPING_API 1
 #endif
 
+//IGNORE_WINDOWS_HEADERS_END
+
 /* i18n library switches ---------------------------------------------------- */
 
 /**
diff --git a/icu/icu4c/source/common/unicode/umachine.h b/icu/icu4c/source/common/unicode/umachine.h
index 09c887c80efd47b2d088129a66a7f16d9be581b5..abaefa2f8025ec4beea17c02e5f5daf6e52761ff 100644
--- a/icu/icu4c/source/common/unicode/umachine.h
+++ b/icu/icu4c/source/common/unicode/umachine.h
@@ -119,6 +119,10 @@
 /** Obsolete/same as U_CAPI; was used to declare a function as an internal ICU C API  */
 #define U_INTERNAL U_CAPI
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: These are C++ only constructs. The Windows OS SDK version of ICU only exposes
+// the flat C APIs.
+
 /**
  * \def U_OVERRIDE
  * Defined to the C++11 "override" keyword if available.
@@ -141,6 +145,8 @@
 #define U_FINAL final
 #endif
 
+//IGNORE_WINDOWS_HEADERS_END
+
 // Before ICU 65, function-like, multi-statement ICU macros were just defined as
 // series of statements wrapped in { } blocks and the caller could choose to
 // either treat them as if they were actual functions and end the invocation
diff --git a/icu/icu4c/source/common/unicode/utypes.h b/icu/icu4c/source/common/unicode/utypes.h
index 7c4ea7ac28dc7b959de93322b6f9d53708fc0474..af8c48fb68f060d2a8941b7a6938b002f26cff0f 100644
--- a/icu/icu4c/source/common/unicode/utypes.h
+++ b/icu/icu4c/source/common/unicode/utypes.h
@@ -89,6 +89,11 @@
 
 /** @} */
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: For the Windows OS version of ICU, it doesn't make sense to expose these
+// constants which are only for loading the main ICU data file. We also don't 
+// support using a data DLL either, so omit them from the Windows SDK header.
+
 /*===========================================================================*/
 /* ICUDATA naming scheme                                                     */
 /*===========================================================================*/
@@ -176,6 +181,8 @@
 #endif
 #endif  /* U_HIDE_INTERNAL_API */
 
+//IGNORE_WINDOWS_HEADERS_END
+
 /**
  * \def NULL
  * Define NULL if necessary, to nullptr for C++ and to ((void *)0) for C.
diff --git a/icu/icu4c/source/common/unicode/uversion.h b/icu/icu4c/source/common/unicode/uversion.h
index 113568df8c127d39d65805a29af38de0e5cdaf08..baea153060073d77ba863a8579060d17c0165262 100644
--- a/icu/icu4c/source/common/unicode/uversion.h
+++ b/icu/icu4c/source/common/unicode/uversion.h
@@ -58,6 +58,10 @@
  */
 typedef uint8_t UVersionInfo[U_MAX_VERSION_LENGTH];
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: Since the Windows OS ICU headers are for C APIs only, we don't
+// need or want any C++ namespace support.
+
 /*===========================================================================*/
 /* C++ namespace if supported. Versioned unless versioning is disabled.      */
 /*===========================================================================*/
@@ -126,6 +130,8 @@ typedef uint8_t UVersionInfo[U_MAX_VERSION_LENGTH];
 #   endif
 #endif /* __cplusplus */
 
+//IGNORE_WINDOWS_HEADERS_END
+
 /*===========================================================================*/
 /* General version helper functions. Definitions in putil.c                  */
 /*===========================================================================*/

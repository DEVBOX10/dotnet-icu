From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Fri, 20 Nov 2020 11:42:52 -0800
Subject: MSFT-PATCH: Make u_cleanup a no-op for the Window OS ICU version, add
 uprv_u_cleanup


diff --git a/icu/icu4c/source/common/ucln_cmn.cpp b/icu/icu4c/source/common/ucln_cmn.cpp
index f3e07c6b89183f1ec24f8e348548e7fad4f0b588..cea10d1abd90832ca234238823e552ff61b65ad9 100644
--- a/icu/icu4c/source/common/ucln_cmn.cpp
+++ b/icu/icu4c/source/common/ucln_cmn.cpp
@@ -36,8 +36,9 @@ static cleanupFunc *gLibCleanupFunctions[UCLN_COMMON];
  The cleanup order is important in this function.
  Please be sure that you have read ucln.h
  ************************************************/
+// MSFT-Change: Make u_cleanup a no-op for the Windows OS ICU version.
 U_CAPI void U_EXPORT2
-u_cleanup(void)
+uprv_u_cleanup(void)
 {
     UTRACE_ENTRY_OC(UTRACE_U_CLEANUP);
     icu::umtx_lock(NULL);     /* Force a memory barrier, so that we are sure to see   */
@@ -52,6 +53,31 @@ u_cleanup(void)
 /*#endif*/
 }
 
+U_CAPI void U_EXPORT2
+u_cleanup(void)
+{
+// When ICU is built as an OS component for Windows, we make the public function u_cleanup
+// effectively a no-op because of the following:
+//  - It is not thread-safe and *forcefully* unloads the ICU data file.
+//  - The ICU library can simultaneously be used by other threads when this happens,
+//    either by Windows.Globalization, or by sorting functions when ICU sorting is default.
+//  - This means an App can call the function at any time, which will cause random crashes. :(
+//
+// We don't completely remove the functionality though, as we still want/need to be able to
+// unload resources when the ICU DLL is unloaded. Instead we make it a private (uprv) function
+// so that the combined DLL can still call it, and we don't export it in the DEF file.
+//
+// Note: We don't unconditionally do this though, as we don't want to alter the behavior of the
+//   public function when ICU when used/consumed in a Nuget package (for example).
+//
+#if defined(ICU_DATA_DIR_WINDOWS)
+    ((void)0); // no-op.
+    return;
+#else
+    uprv_u_cleanup();
+#endif
+}
+
 U_CAPI void U_EXPORT2 ucln_cleanupOne(ECleanupLibraryType libType) 
 {
     if (gLibCleanupFunctions[libType])

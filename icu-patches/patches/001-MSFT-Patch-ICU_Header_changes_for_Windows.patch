From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Fri, 20 Nov 2020 10:59:46 -0800
Subject: [MSFT-PATCH] Changes to ICU headers for Windows OS version of ICU.

This adds special marker comments to the ICU headers in order to omit
things we don't want in the Windows public SDK header.

diff --git a/icu/icu4c/source/common/unicode/putil.h b/icu/icu4c/source/common/unicode/putil.h
index 500c21252fc2d72976e4bbcd66f67dd6c936b7bc..c0b34556ebc1c2197e8222a3236720e7ecf0ee74 100644
--- a/icu/icu4c/source/common/unicode/putil.h
+++ b/icu/icu4c/source/common/unicode/putil.h
@@ -42,6 +42,9 @@
  * functions may have to be re-implemented.
  */
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: The Windows OS version of ICU uses a single fixed data file.
+
 /**
  * Return the ICU data directory. 
  * The data directory is where common format ICU data files (.dat files)
@@ -112,7 +115,7 @@ U_CAPI const char * U_EXPORT2 u_getTimeZoneFilesDirectory(UErrorCode *status);
 U_CAPI void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCode *status);
 #endif  /* U_HIDE_INTERNAL_API */
 
-
+// MSFT-TODO: Should these be considered for Windows?
 /**
  * @{
  * Filesystem file and path separator characters.
@@ -134,6 +137,7 @@ U_CAPI void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCode *
 #   define U_FILE_ALT_SEP_STRING "/"
 #   define U_PATH_SEP_STRING ":"
 #endif
+//IGNORE_WINDOWS_HEADERS_END
 
 /** @} */
 
diff --git a/icu/icu4c/source/common/unicode/unistr.h b/icu/icu4c/source/common/unicode/unistr.h
index 456389f265fea03d168aa1f69a07bd640e10d3c9..ee66bb2170026899d40a9c58e8cb877ca953befc 100644
--- a/icu/icu4c/source/common/unicode/unistr.h
+++ b/icu/icu4c/source/common/unicode/unistr.h
@@ -58,6 +58,9 @@ class Edits;
 
 U_NAMESPACE_END
 
+//IGNORE_WINDOWS_HEADERS_START
+// MSFT-Change: Hiding the @internal API below, since we don't expose the C++ UnicodeString.
+
 // Not #ifndef U_HIDE_INTERNAL_API because UnicodeString needs the UStringCaseMapper.
 /**
  * Internal string case mapping function type.
@@ -75,6 +78,8 @@ UStringCaseMapper(int32_t caseLocale, uint32_t options,
                   icu::Edits *edits,
                   UErrorCode &errorCode);
 
+//IGNORE_WINDOWS_HEADERS_END
+
 U_NAMESPACE_BEGIN
 
 class Locale;               // unicode/locid.h
